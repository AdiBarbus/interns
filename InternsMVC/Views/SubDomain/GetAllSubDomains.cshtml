@*@model IEnumerable<InternsDataAccessLayer.Entities.SubDomain>*@
@model PagedList.IPagedList<InternsDataAccessLayer.Entities.SubDomain>
@using PagedList.Mvc

@{
    ViewBag.Title = "Subdomains";
}

<h2>Subdomains</h2>

@using (Html.BeginForm("GetAllSubDomains", "SubDomains", FormMethod.Get))
{
    <p>
        Find by name: @Html.TextBox("SearchString", ViewBag.CurrentFilter as string)
        <input type="submit" value="Search" />
    </p>
}

<div class="panel panel-default">
    <table class="table table-striped table-condensed table-bordered">
        <tr>
            <th class="text-left">ID</th>
            <th class="text-left">Name</th>

            <th>
                Go to
            </th>
            @if (Request.IsAuthenticated && User.IsInRole("Admin"))
            {
                <th>Actions</th>
            }
        </tr>

        @foreach (var item in Model)
        {
            <tr>
                <td class="text-left">
                    @Html.DisplayFor(modelItem => item.Id)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Name)
                </td>
                <td>
                    @Html.ActionLink("Advertises", "GetAdvertisesByDomain", "Domain", new { domainId = item.Id }, null)
                </td>
                @if (Request.IsAuthenticated && User.IsInRole("Admin"))
                {
                    <td>
                        @Html.ActionLink("Edit", "EditSubDomain", new { id = item.Id }) |
                        @Html.ActionLink("Delete", "DeleteSubDomain", new { id = item.Id })
                    </td>
                }
            </tr>
        }
    </table>
</div>

<div class="text-right">
    @Html.ActionLink("Sort by Name Descending", "GetAllSubDomains", new { sortOrder = ViewBag.NameSortParm, currentFilter = ViewBag.CurrentFilter})
</div>
<br />
Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount

@Html.PagedListPager(Model, page => Url.Action("GetAllSubDomains",
    new { page, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter }))

@if (Request.IsAuthenticated && User.IsInRole("Admin"))
{
    <div> @Html.ActionLink("Add Subdomain", "CreateSubDomain", null, new {@class = "btn btn-default"}) </div>
}